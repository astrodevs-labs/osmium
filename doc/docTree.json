[
  {
    "id": "max-line-length",
    "description": "Line length must be no more than maxlen.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/max_line_length.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/MaxLineLength",
    "options": [
      {
        "description": "Maximum allowed number of characters per line",
        "default": "120"
      }
    ],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "max-states-count",
    "description": "Contract has \"some count\" states declarations but allowed no more than maxstates.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/max_states_count.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/MaxStatesCount",
    "options": [
      {
        "description": "Maximum allowed states declarations",
        "default": "15"
      }
    ],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "function-max-lines",
    "description": "Function body contains \"count\" lines but allowed no more than maxlines.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/function_max_lines.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/FunctionMaxLines",
    "options": [
      {
        "description": "Maximum allowed lines count per function\t",
        "default": "50"
      }
    ],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "reason-string",
    "description": "Require or revert statement must have a reason string and check that each reason string is at most N characters long.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/reason_string.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/ReasonString",
    "options": [
      {
        "description": "A JSON object with a single property \"maxLength\" specifying the max number of characters per reason string.",
        "default": "{\"maxLength\":32}"
      }
    ],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "no-console",
    "description": "No console.log/logInt/logBytesX/logString/etc & No hardhat and forge-std console.sol import statements.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/no_console.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/NoConsole",
    "options": [],
    "examples": {
      "good": [],
      "bad": [
        {
          "description": "No console.logX statements",
          "code": "console.log('test')."
        },
        {
          "description": "No hardhat/console.sol import statements",
          "code": "import 'hardhat/console.sol';"
        },
        {
          "description": "No forge-std console.sol & console2.sol import statements",
          "code": "import 'forge-std/consoleN.sol';"
        }
      ]
    }
  },
  {
    "id": "one-contract-per-file",
    "description": "Imported object name is not being used by the contract.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/one_contract_per_file.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/OneContractPerFile",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "Imported object is being used",
          "code": "import { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n                        ontract MyToken is ERC20 {}"
        }
      ],
      "bad": [
        {
          "description": "Imported object is not being used",
          "code": "import { ERC20 } from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n                        contract B {}"
        }
      ]
    }
  },
  {
    "id": "custom-errors",
    "description": "Enforces the use of Custom Errors over Require and Revert statements",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/custom_errors.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/CustomErrors",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "Use Custom Errors",
          "code": "revert CustomErrorFunction();"
        },
        {
          "description": "Use of Custom Errors with arguments",
          "code": "revert CustomErrorFunction({ msg: \"Insufficient Balance\" });"
        }
      ],
      "bad": [
        {
          "description": "Use of require statement",
          "code": "require(userBalance >= availableAmount, \"Insufficient Balance\");"
        },
        {
          "description": "Use of plain revert statement",
          "code": "revert();"
        },
        {
          "description": "Use of revert statement with message",
          "code": "revert(\"Insufficient Balance\");"
        }
      ]
    }
  },
  {
    "id": "no-global-import",
    "description": "Import statement includes an entire file instead of selected symbols.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/no_global_import.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/NoGlobalImport",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "import names explicitly",
          "code": "import {A} from \"./A.sol\""
        },
        {
          "description": "import entire file into a name",
          "code": "import \"./A.sol\" as A"
        },
        {
          "description": "import entire file into a name",
          "code": "import * as A from \"./A.sol\""
        }
      ],
      "bad": [
        {
          "description": "import all members from a file",
          "code": "import * from \"foo.sol\";"
        },
        {
          "description": "import an entire file",
          "code": "import \"foo.sol\""
        }
      ]
    }
  },
  {
    "id": "no-empty-block",
    "description": "Code block has zero statements inside. Exceptions apply.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/no_empty_block.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/NoEmptyBlock",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "Empty fallback function",
          "code": "fallback() external {}"
        },
        {
          "description": "Empty constructor with member initialization list",
          "code": "constructor(uint param) Foo(param) Bar(param*2) { }"
        }
      ],
      "bad": [
        {
          "description": "Empty block on if statement",
          "code": "if (condition) { }"
        },
        {
          "description": "Empty contract",
          "code": "contract Foo { }"
        },
        {
          "description": "Empty block in constructor without parent initialization",
          "code": "constructor() { }"
        }
      ]
    }
  },
  {
    "id": "explicit-types",
    "description": "Forbid or enforce explicit types (like uint256) that have an alias (like uint).",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/explicit_types.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/ExplicitTypes",
    "options": [
      {
        "description": "Options need to be one of \"explicit\", \"implicit\"",
        "default": "explicit"
      }
    ],
    "examples": {
      "good": [
        {
          "description": "If explicit is selected",
          "code": "uint256 public variableName"
        },
        {
          "description": "If implicit is selected",
          "code": "uint public variableName"
        },
        {
          "description": "If explicit is selected",
          "code": "uint256 public variableName = uint256(5)"
        }
      ],
      "bad": [
        {
          "description": "If explicit is selected",
          "code": "uint public variableName"
        },
        {
          "description": "If implicit is selected",
          "code": "uint256 public variableName"
        },
        {
          "description": "At any setting",
          "code": "uint public variableName = uint256(5)"
        }
      ]
    }
  },
  {
    "id": "payable-fallback",
    "description": "When fallback is not payable you will not be able to receive ethers.",
    "category": "best-practices",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/best_practices/payable_fallback.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/PayableFallback",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "Fallback is payable",
          "code": "\n                        pragma solidity 0.4.4;\n\n\n                        contract A {\n\n                        function () public payable {}\n\n                        }"
        }
      ],
      "bad": [
        {
          "description": "Fallback is not payable",
          "code": "\n                        pragma solidity 0.4.4;\n\n \n                        contract A {\n\n                        function () public {}\n\n                        }"
        }
      ]
    }
  },
  {
    "id": "contract-name-camelcase",
    "description": "Contract name must be in CamelCase.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/contract_name_camelcase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/ContractNameCamelcase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "func-name-mixedcase",
    "description": "Function name must be in mixedCase.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/func_name_mixedcase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/FuncNameMixedcase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "func-param-name-mixedcase",
    "description": "Function param name must be in mixedCase.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/func_param_name_mixedcase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/FuncParamNameMixedcase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "use-forbidden-name",
    "description": "Avoid to use letters 'I', 'l', 'O' as identifiers.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/use_forbidden_name.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/UseForbiddenName",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "event-name-camelcase",
    "description": "Event name must be in CamelCase.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/event_name_camelcase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/EventNameCamelcase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "const-name-snakecase",
    "description": "Constant name must be in capitalized SNAKE_CASE. (Does not check IMMUTABLES, use immutable-vars-naming)",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/const_name_snakecase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/ConstNameSnakecase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "private-vars-leading-underscore",
    "description": "Non-external functions and state variables should start with a single underscore. Others, shouldn't",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/private_vars_leading_underscore.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/PrivateVarsLeadingUnderscore",
    "options": [
      {
        "description": "A JSON object with a single property \"strict\" specifying if the rule should apply to ALL non state variables. Default: { strict: false }.",
        "default": "{\"strict\":false}"
      }
    ],
    "examples": {
      "good": [
        {
          "description": "Internal function with correct naming",
          "code": "function _thisIsInternal() internal {}"
        },
        {
          "description": "Private function with correct naming",
          "code": "function _thisIsPrivate() private {}"
        },
        {
          "description": "Internal state variable with correct naming",
          "code": "uint256 internal _thisIsInternalVariable;"
        },
        {
          "description": "Internal state variable with correct naming (no visibility is considered internal)",
          "code": "uint256 _thisIsInternalVariable;"
        }
      ],
      "bad": [
        {
          "description": "Internal function with incorrect naming",
          "code": "function thisIsInternal() internal {}"
        },
        {
          "description": "Private function with incorrect naming",
          "code": "function thisIsPrivate() private {}"
        },
        {
          "description": "Internal state variable with incorrect naming",
          "code": "uint256 internal thisIsInternalVariable;"
        },
        {
          "description": "Internal state variable with incorrect naming (no visibility is considered internal)",
          "code": "uint256 thisIsInternalVariable;"
        }
      ]
    }
  },
  {
    "id": "var-name-mixedcase",
    "description": "Variable name must be in mixedCase. (Does not check IMMUTABLES, use immutable-vars-naming)",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/var_name_mixedcase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/VarNameMixedcase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "modifier-name-mixedcase",
    "description": "Modifier name must be in mixedCase.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/modifier_name_mixedcase.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/ModifierNameMixedcase",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "named-parameters-mapping",
    "description": "Solidity v0.8.18 introduced named parameters on the mappings definition.",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/named_parameters_mapping.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/NamedParametersMapping",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "To enter \"users\" mapping the key called \"name\" is needed to get the \"balance\"",
          "code": "mapping(string name => uint256 balance) public users;"
        },
        {
          "description": "To enter owner token balance, the main key \"owner\" enters another mapping which its key is \"token\" to get its \"balance\"",
          "code": "mapping(address owner => mapping(address token => uint256 balance)) public tokenBalances;"
        },
        {
          "description": "Main key of mapping is enforced. On nested mappings other naming are not neccesary",
          "code": "mapping(address owner => mapping(address => uint256)) public tokenBalances;"
        },
        {
          "description": "Main key of the parent mapping is enforced. No naming in nested mapping uint256",
          "code": "mapping(address owner => mapping(address token => uint256)) public tokenBalances;"
        },
        {
          "description": "Main key of the parent mapping is enforced. No naming in nested mapping address",
          "code": "mapping(address owner => mapping(address => uint256 balance)) public tokenBalances;"
        }
      ],
      "bad": [
        {
          "description": "No naming at all in regular mapping",
          "code": "mapping(address => uint256)) public tokenBalances;"
        },
        {
          "description": "Missing any variable name in regular mapping uint256",
          "code": "mapping(address token => uint256)) public tokenBalances;"
        },
        {
          "description": "Missing any variable name in regular mapping address",
          "code": "mapping(address => uint256 balance)) public tokenBalances;"
        },
        {
          "description": "No MAIN KEY naming in nested mapping. Other naming are not enforced",
          "code": "mapping(address => mapping(address token => uint256 balance)) public tokenBalances;"
        }
      ]
    }
  },
  {
    "id": "foundry-test-functions",
    "description": "Enforce naming convention on functions for Foundry test cases",
    "category": "naming",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/naming/foundry_test_functions.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/FoundryTestFunctions",
    "options": [
      {
        "description": "Array of function to be skipped",
        "default": "[]"
      }
    ],
    "examples": {
      "good": [
        {
          "description": "Foundry test case with correct Function declaration",
          "code": "function test_NumberIs42() public {}"
        },
        {
          "description": "Foundry test case with correct Function declaration",
          "code": "function testFail_Subtract43() public {}"
        },
        {
          "description": "Foundry test case with correct Function declaration",
          "code": "function testFuzz_FuzzyTest() public {}"
        }
      ],
      "bad": [
        {
          "description": "Foundry test case with incorrect Function declaration",
          "code": "function numberIs42() public {}"
        }
      ]
    }
  },
  {
    "id": "import-on-top",
    "description": "Import statements must be on top.",
    "category": "order",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/order/import_on_top.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/ImportOnTop",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "ordering",
    "description": "Check order of elements in file and inside each contract, according to the style guide.",
    "category": "order",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/order/ordering.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/Ordering",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "visibility-modifier-order",
    "description": "Visibility modifier must be first in list of modifiers.",
    "category": "order",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/order/visibility_modifier_order.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/VisibilityModifierOrder",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "no-inline-assembly",
    "description": "Avoid to use inline assembly. It is acceptable only in rare cases.",
    "category": "security",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/security/no_inline_assembly.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/NoInlineAssembly",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "state-visibility",
    "description": "Explicitly mark visibility of state.",
    "category": "security",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/security/state_visibility.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/",
    "options": [],
    "examples": {
      "good": [
        {
          "description": "State explicitly marked with visibility",
          "code": "uint public data;"
        }
      ],
      "bad": [
        {
          "description": "Functions without explicitly marked visibility",
          "code": "uint data;"
        }
      ]
    }
  },
  {
    "id": "not-rely-on-time",
    "description": "Avoid making time-based decisions in your business logic.",
    "category": "security",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/security/not_rely_on_time.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/NotRelyOnTime",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  },
  {
    "id": "func-visibility",
    "description": "Explicitly mark visibility in function.",
    "category": "security",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/security/func_visibility.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/FuncVisibility",
    "options": [
      {
        "description": "A JSON object with a single property \"ignoreConstructors\" specifying if the rule should ignore constructors. (Note: This is required to be true for Solidity >=0.7.0 and false for <0.7.0)",
        "default": "{\"ignoreConstructors\":false}"
      }
    ],
    "examples": {
      "good": [
        {
          "description": "Functions explicitly marked with visibility",
          "code": "function b() internal { }\nfunction b() external { }\nfunction b() private { }\nfunction b() public { }\nconstructor() public { }"
        }
      ],
      "bad": [
        {
          "description": "Functions without explicitly marked visibility",
          "code": "function b() { }"
        }
      ]
    }
  },
  {
    "id": "avoid-tx-origin",
    "description": "Avoid to use tx.origin.",
    "category": "security",
    "example_config": "",
    "source_link": "https://github.com/astrodevs-labs/osmium/blob/dev/toolchains/solidity/core/crates/linter-lib/src/rules/security/avoid_tx_origin.rs",
    "test_link": "https://github.com/astrodevs-labs/osmium/tree/dev/toolchains/solidity/core/crates/linter-lib/testdata/AvoidTxOrigin",
    "options": [],
    "examples": {
      "good": [],
      "bad": []
    }
  }
]