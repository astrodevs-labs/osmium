[
  {
      "id": "code-complexity",
        "description": "Function has cyclomatic complexity 'current' but allowed no more than maxcompl.",
        "category": "Best Practise Rules",
        "options": [
          {
            "description": "severityDescription",
            "default": "DEFAULT_SEVERITY"
          },
          {
            "description": "Maximum allowed cyclomatic complexity",
            "default": "DEFAULT_COMPLEXITY"
          }
        ],
        "examples": {
          "good": [
            {
              "description": "Low code complexity",
              "code": "require('../../../test/fixtures/best-practises/code-complexity-low')"
            }
          ],
          "bad": [
            {
              "description": "High code complexity",
              "code": "require('../../../test/fixtures/best-practises/code-complexity-high')"
            }
          ]
        }
    },
    {
      "id" : "function-max-lines",
        "description": "Function body contains 'count' lines but allowed no more than maxlines.",
        "category": "Best Practise Rules",
        "options": [
          {
            "description": "severityDescription",
            "default": "DEFAULT_SEVERITY"
          },
          {
            "description": "Maximum allowed lines count per function",
            "default": "DEFAULT_MAX_LINES_COUNT"
          }
        ]
    },
    {
      "id" : "custom-error",
      "description": "Enforces the use of Custom Errors over Require and Revert statements",
      "category": "Best Practise Rules",
      "options": [
        {
          "description": "severityDescription",
          "default": "DEFAULT_SEVERITY"
        }
      ],
      "examples": {
        "good": [
          {
            "description": "Use of Custom Errors",
            "code": "revert CustomErrorFunction();"
          },
          {
            "description": "Use of Custom Errors with arguments",
            "code": "revert CustomErrorFunction({ \"msg\": \"Insufficient Balance\" });"
          }
        ],
        "bad": [
          {
            "description": "Use of require statement",
            "code": "require(userBalance >= availableAmount, \"Insufficient Balance\");"
          },
          {
            "description": "Use of plain revert statement",
            "code": "revert();"
          },
          {
            "description": "Use of revert statement with message",
            "code": "revert(\"Insufficient Balance\");"
          }
        ]
      }
    },
    {
      "id" : "named-parameters-mapping",
      "description": "Explicitly mark visibility in function.",
      "category": "Security Rules",
      "type": "security",
      "example_config": "example de config",
      "source_link": "https://github.com/eeeee",
      "test_link": "https://github.com/eeeee",
      "options": [
        {
          "description": "A JSON object with a single property \"ignoreConstructors\" specifying if the rule should ignore constructors. (**Note: This is required to be true for Solidity >=0.7.0 and false for <0.7.0**)",
          "default": "UNE OPTION"
        }
      ],
      "examples": {
        "good": [
          {
            "description": "Functions explicitly marked with visibility",
            "code": "require('../../../test/fixtures/security/functions-with-visibility').join('\n')"
          }
        ],
        "bad": [
          {
            "description": "Functions without explicitly marked visibility",
            "code": "require('../../../test/fixtures/security/functions-without-visibility').join('\n')"
          }
        ]
      }
    }
  ]